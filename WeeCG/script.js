// script.js

// --- Firebase Initialization START ---
// ... (—Ü–µ–π –±–ª–æ–∫ –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è –±–µ–∑ –∑–º—ñ–Ω) ...
// –ó–±–µ—Ä—ñ–≥–∞–π—Ç–µ –≤–∞—à—ñ —Ä–µ–∞–ª—å–Ω—ñ –∫–ª—é—á—ñ —Ç—É—Ç
const firebaseConfig = {
  apiKey: "AIzaSyAt5GlmmqhW6IeDd3oFB0yq2xQARd8YPNs",
  authDomain: "weegamebot-7c44b.firebaseapp.com",
  databaseURL: "https://weegamebot-7c44b-default-rtdb.firebaseio.com",
  projectId: "weegamebot-7c44b",
  storageBucket: "weegamebot-7c44b.firebasestorage.app",
  messagingSenderId: "1052981895153",
  appId: "1:1052981895153:web:0c8426bf8e5b97729a6e50"
};

// –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è Firebase SDK –∑ CDN
const firebaseAppScript = document.createElement('script');
firebaseAppScript.src = "https://www.gstatic.com/firebasejs/8.10.1/firebase-app.js";
firebaseAppScript.onload = () => {
    const firebaseFirestoreScript = document.createElement('script');
    firebaseFirestoreScript.src = "https://www.gstatic.com/firebasejs/8.10.1/firebase-firestore.js";
    firebaseFirestoreScript.onload = () => {
        const app = firebase.initializeApp(firebaseConfig);
        const db = firebase.firestore();
        window.db = db;

        console.log("Firebase Firestore initialized.");

        // loadPlayerData() —Ç–µ–ø–µ—Ä –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –∑DOMContentLoaded –ø—ñ—Å–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è Telegram ID
        // startAutoClicker() —Ç–∞ startEnergyRecharge() –±—É–¥—É—Ç—å –≤–∏–∫–ª–∏–∫–∞–Ω—ñ –∑ loadPlayerData()
    };
    document.head.appendChild(firebaseFirestoreScript);
};
document.head.appendChild(firebaseAppScript);

// --- Firebase Initialization END ---

// –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Å–∏–ª–∞–Ω—å –Ω–∞ HTML-–µ–ª–µ–º–µ–Ω—Ç–∏
const scoreElement = document.getElementById('score');
const clickButton = document.getElementById('clickButton');
const upgrade1Button = document.getElementById('upgrade1');
const upgrade1CostElement = document.getElementById('upgrade1Cost');
const upgrade2Button = document.getElementById('upgrade2');
const upgrade2CostElement = document.getElementById('upgrade2Cost');
const debugUserIdElement = document.getElementById('debugUserId');

const loadingScreen = document.getElementById('loading-screen');
const gameScreen = document.getElementById('game-screen'); // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —ñ–≥—Ä–æ–≤–∏–π –µ–∫—Ä–∞–Ω
const progressBarFill = document.getElementById('progressBarFill');
const loadingText = document.getElementById('loadingText');

const mainBalanceElement = document.getElementById('mainBalance');
const energyBarFill = document.getElementById('energyBarFill');
const energyText = document.getElementById('energyText');

// –Ü–≥—Ä–æ–≤—ñ –∑–º—ñ–Ω–Ω—ñ
let score = 0;
let mainBalance = 0;
let clickPower = 1;
let autoClickPower = 0;
let upgrade1Cost = 100;
let upgrade2Cost = 500;
let telegramUserId = null;

let currentEnergy = 1000;
const maxEnergy = 1000;

// –ù–û–í–ê –ó–ú–Ü–ù–ù–ê: –ß–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –ø–æ–≤–Ω–æ–≥–æ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –µ–Ω–µ—Ä–≥—ñ—ó
let lastEnergyRechargeTime = 0; // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —è–∫ –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥–∏ –∑ –ø–æ—á–∞—Ç–∫—É –µ–ø–æ—Ö–∏ (timestamp)

let autoClickInterval;

const coinClickSound = new Audio('coin_click.mp3');
coinClickSound.volume = 0.5;

// –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
function updateDisplay() {
    scoreElement.textContent = Math.floor(score);
    mainBalanceElement.textContent = Math.floor(mainBalance);
    upgrade1CostElement.textContent = upgrade1Cost;
    upgrade2CostElement.textContent = upgrade2Cost;
    checkUpgradeAvailability();
    updateEnergyDisplay();
}

// –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –µ–Ω–µ—Ä–≥—ñ—ó
function updateEnergyDisplay() {
    const percentage = (currentEnergy / maxEnergy) * 100;
    energyBarFill.style.width = `${percentage}%`;
    const icon = currentEnergy <= 0 ? 'ü™´' : 'üîã';
    energyText.textContent = `${icon} ${Math.floor(currentEnergy)} / ${maxEnergy}`;
    clickButton.disabled = currentEnergy <= 0;
    clickButton.style.opacity = currentEnergy <= 0 ? 0.7 : 1;
    clickButton.style.cursor = currentEnergy <= 0 ? 'not-allowed' : 'pointer';
}

// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–ø–≥—Ä–µ–π–¥—ñ–≤ (–±–µ–∑ –∑–º—ñ–Ω)
function checkUpgradeAvailability() {
    upgrade1Button.disabled = score < upgrade1Cost;
    upgrade2Button.disabled = score < upgrade2Cost;
}

// –§—É–Ω–∫—Ü—ñ—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –µ–Ω–µ—Ä–≥—ñ—ó —Ä–∞–∑ –Ω–∞ –¥–æ–±—É
function rechargeEnergyOncePerDay() {
    const twentyFourHoursInMs = 24 * 60 * 60 * 1000; // 24 –≥–æ–¥–∏–Ω–∏ –≤ –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥–∞—Ö
    const currentTime = Date.now();

    // –Ø–∫—â–æ –µ–Ω–µ—Ä–≥—ñ—è –Ω–µ –ø–æ–≤–Ω–∞ —ñ –º–∏–Ω—É–ª–æ 24 –≥–æ–¥–∏–Ω–∏ –∑ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è
    if (currentEnergy < maxEnergy && (currentTime - lastEnergyRechargeTime) >= twentyFourHoursInMs) {
        currentEnergy = maxEnergy; // –ü–æ–ø–æ–≤–Ω—é—î–º–æ –¥–æ –º–∞–∫—Å–∏–º—É–º—É
        lastEnergyRechargeTime = currentTime; // –û–Ω–æ–≤–ª—é—î–º–æ —á–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –ø–æ–≤–Ω–æ–≥–æ –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è
        updateEnergyDisplay();
        savePlayerData(); // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–∞–Ω—ñ –ø—ñ—Å–ª—è –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è
        console.log("–ï–Ω–µ—Ä–≥—ñ—è –ø–æ–≤–Ω—ñ—Å—Ç—é –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–∞!");
    } else if (currentEnergy >= maxEnergy) {
        // –Ø–∫—â–æ –µ–Ω–µ—Ä–≥—ñ—è –ø–æ–≤–Ω–∞, –ø—Ä–æ—Å—Ç–æ –æ–Ω–æ–≤–ª—é—î–º–æ —á–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –ø–æ–≤–Ω–æ–≥–æ –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è,
        // —â–æ–± –Ω–∞—Å—Ç—É–ø–Ω–µ –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è –±—É–ª–æ —á–µ—Ä–µ–∑ 24 –≥–æ–¥–∏–Ω–∏ –≤—ñ–¥ —Ü—å–æ–≥–æ –º–æ–º–µ–Ω—Ç—É.
        lastEnergyRechargeTime = currentTime;
        savePlayerData(); // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ, —â–æ–± –æ–Ω–æ–≤–∏—Ç–∏ lastEnergyRechargeTime
    }
}


// –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑ Firestore
async function loadPlayerData() {
    if (!window.db) {
        console.error("Firestore –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π. (loadPlayerData)");
        updateDisplay();
        return;
    }

    if (!telegramUserId) {
        console.warn("Telegram User ID not available for load. Running in test mode.");
        telegramUserId = 'test_user_local';
        updateDisplay();
        // –ó–∞–ø—É—Å–∫–∞—î–º–æ –∞–≤—Ç–æ–∫–ª—ñ–∫–µ—Ä, –Ω–∞–≤—ñ—Ç—å –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º—É, –±–µ–∑ Firestore
        startAutoClicker();
        return; // –í–∏—Ö–æ–¥–∏–º–æ, —è–∫—â–æ –Ω–µ–º–∞—î —Ä–µ–∞–ª—å–Ω–æ–≥–æ ID
    }

    try {
        const doc = await window.db.collection("players").doc(telegramUserId).get();
        if (doc.exists) {
            const data = doc.data();
            score = data.score || 0;
            mainBalance = data.mainBalance || 0;
            clickPower = data.clickPower || 1;
            autoClickPower = data.autoClickPower || 0;
            upgrade1Cost = data.upgrade1Cost || 100;
            upgrade2Cost = data.upgrade2Cost || 500;
            currentEnergy = data.currentEnergy || maxEnergy;
            // –ó—á–∏—Ç—É—î–º–æ —á–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è –∑ Firestore
            lastEnergyRechargeTime = data.lastEnergyRechargeTime || 0;
        } else {
            console.log("No player data found for", telegramUserId, ". Starting new game.");
            // –Ø–∫—â–æ –Ω–æ–≤—ñ –≥—Ä–∞–≤—Ü—ñ, –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤–∏–π —á–∞—Å –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è –Ω–∞ –ø–æ—Ç–æ—á–Ω–∏–π –º–æ–º–µ–Ω—Ç
            lastEnergyRechargeTime = Date.now();
        }
        updateDisplay();

        // –ó–∞–ø—É—Å–∫ —ñ–Ω—Ç–µ—Ä–≤–∞–ª—ñ–≤ –ü–Ü–°–õ–Ø –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
        startAutoClicker();

        // –û–î–ù–û–†–ê–ó–û–í–ê –ü–ï–†–ï–í–Ü–†–ö–ê –ï–ù–ï–†–ì–Ü–á –ü–†–ò –ó–ê–í–ê–ù–¢–ê–ñ–ï–ù–ù–Ü
        rechargeEnergyOncePerDay();

    } catch (e) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –≥—Ä–∞–≤—Ü—è:', e);
        updateDisplay();
    }
}

// –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ Firestore
async function savePlayerData() {
    if (!window.db) {
        console.warn("Firestore –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π. –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–µ–º–æ–∂–ª–∏–≤–µ.");
        return;
    }
    if (telegramUserId === 'test_user_local' || !telegramUserId) {
        console.warn("Cannot save data: Telegram User ID is test ID or not available. Data will not be saved to Firestore.");
        return;
    }

    try {
        await window.db.collection("players").doc(telegramUserId).set({
            score, mainBalance, clickPower, autoClickPower,
            upgrade1Cost, upgrade2Cost, currentEnergy,
            lastEnergyRechargeTime // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —á–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è
        }, { merge: true }); // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ merge, —â–æ–± –Ω–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—É–≤–∞—Ç–∏ —ñ–Ω—à—ñ –ø–æ–ª—è
        // console.log("Player data saved for", telegramUserId);
    } catch (e) {
        console.error("–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –≥—Ä–∞–≤—Ü—è:", e);
    }
}

// –ê–≤—Ç–æ–∫–ª—ñ–∫ (–±–µ–∑ –∑–º—ñ–Ω)
function startAutoClicker() {
    if (autoClickInterval) clearInterval(autoClickInterval);
    if (autoClickPower > 0) {
        autoClickInterval = setInterval(() => {
            score += autoClickPower;
            updateDisplay();
            savePlayerData();
        }, 1000);
    }
}

// –ü—Ä–æ–≥—Ä–µ—Å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è (–±–µ–∑ –∑–º—ñ–Ω)
function startLoadingProgress() {
    let progress = 0;
    const interval = setInterval(() => {
        progress += Math.random() * 5;
        if (progress > 99) progress = 99;
        progressBarFill.style.width = `${progress}%`;
        loadingText.textContent = `–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è... ${Math.floor(progress)}%`;
        if (progress === 99) {
            clearInterval(interval);
            setTimeout(() => {
                loadingScreen.classList.add('hidden');
                gameScreen.classList.remove('hidden');
                // loadPlayerData() —Ç–µ–ø–µ—Ä –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –∑ DOMContentLoaded –ø—ñ—Å–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è Telegram ID
            }, 4000);
        }
    }, 50);
}

// –°—Ç–∞—Ä—Ç –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ
document.addEventListener('DOMContentLoaded', () => {
    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Telegram Web App API —Ç–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    if (window.Telegram && window.Telegram.WebApp) {
        const tg = window.Telegram.WebApp;
        tg.ready();
        setTimeout(() => tg.expand(), 100);

        if (tg.initDataUnsafe?.user?.id) {
            telegramUserId = tg.initDataUnsafe.user.id.toString();
            debugUserIdElement.textContent = "ID: " + telegramUserId;
            console.log("Telegram User ID obtained:", telegramUserId);
            loadPlayerData(); // –í–∏–∫–ª–∏–∫–∞—î–º–æ loadPlayerData —Ç—É—Ç, –ø—ñ—Å–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è Telegram ID
        } else {
            console.warn("Telegram User ID not available from tg.initDataUnsafe.user.id.");
            debugUserIdElement.textContent = "ID: –ù–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π (—Ç–µ—Å—Ç)";
            loadPlayerData(); // –í–∏–∫–ª–∏–∫–∞—î–º–æ loadPlayerData –Ω–∞–≤—ñ—Ç—å –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º—É
        }
    } else {
        console.warn("Telegram Web App API not found. Please open in Telegram to get user ID.");
        debugUserIdElement.textContent = "ID: API Telegram –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ";
        setTimeout(() => {
            loadingScreen.classList.add('hidden');
            gameScreen.classList.remove('hidden');
            loadPlayerData(); // –í–∏–∫–ª–∏–∫–∞—î–º–æ loadPlayerData –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º—É
        }, 2000);
    }

    startLoadingProgress();

    // –û–±—Ä–æ–±–Ω–∏–∫ –∫–ª—ñ–∫—É
    clickButton.addEventListener('click', (event) => { // –î–æ–¥–∞–Ω–æ 'event'
        if (currentEnergy > 0) {
            score += clickPower;
            currentEnergy--;
            updateDisplay();
            savePlayerData(); // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–∞–Ω—ñ –ø—ñ—Å–ª—è –∫–æ–∂–Ω–æ–≥–æ –∫–ª—ñ–∫—É

            try {
                coinClickSound.currentTime = 0;
                coinClickSound.play();
            } catch (e) {
                console.error("–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–≤—É–∫—É:", e);
            }

            // --- –ù–û–í–ò–ô –ö–û–î –î–õ–Ø –ü–õ–ê–í–ê–Æ–ß–û–ì–û –¢–ï–ö–°–¢–£ ---
            const floatingText = document.createElement('div');
            floatingText.classList.add('floating-text');
            floatingText.textContent = `+${clickPower}`;

            // –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ–∑–∏—Ü—ñ—é –∫–ª—ñ–∫—É –≤—ñ–¥–Ω–æ—Å–Ω–æ –≤—ñ–∫–Ω–∞
            const clickX = event.clientX;
            const clickY = event.clientY;

            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø–æ–∑–∏—Ü—ñ—é —Ç–µ–∫—Å—Ç—É
            // –¢—Ä–æ—Ö–∏ –∑–º—ñ—â—É—î–º–æ –≤—ñ–¥ –º—ñ—Å—Ü—è –∫–ª—ñ–∫—É, —â–æ–± –Ω–µ –∑–∞–∫—Ä–∏–≤–∞—Ç–∏ –ø–∞–ª–µ—Ü—å
            floatingText.style.left = `${clickX}px`;
            floatingText.style.top = `${clickY - 20}px`; // –ó–º—ñ—â—É—î–º–æ –≤–∏—â–µ –≤—ñ–¥ –º—ñ—Å—Ü—è –∫–ª—ñ–∫—É

            gameScreen.appendChild(floatingText); // –î–æ–¥–∞—î–º–æ –¥–æ game-screen –∞–±–æ container

            // –í–∏–¥–∞–ª—è—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –ø—ñ—Å–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
            floatingText.addEventListener('animationend', () => {
                floatingText.remove();
            });
            // --- –ö–Ü–ù–ï–¶–¨ –ù–û–í–û–ì–û –ö–û–î–£ ---

        } else {
            console.log("–ï–Ω–µ—Ä–≥—ñ—è –≤–∏—á–µ—Ä–ø–∞–Ω–∞!");
            // –¢—É—Ç –º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –≤—ñ–∑—É–∞–ª—å–Ω–∏–π —Ñ—ñ–¥–±–µ–∫ –¥–ª—è –≤–∏—á–µ—Ä–ø–∞–Ω–æ—ó –µ–Ω–µ—Ä–≥—ñ—ó,
            // –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –ø–æ–∫–∞–∑–∞—Ç–∏ —Å–ø–ª–∏–≤–∞—é—á–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è "–ï–Ω–µ—Ä–≥—ñ—è –≤–∏—á–µ—Ä–ø–∞–Ω–∞!"
        }
    });

    upgrade1Button.addEventListener('click', () => {
        if (score >= upgrade1Cost) {
            score -= upgrade1Cost;
            clickPower += 1;
            upgrade1Cost = Math.floor(upgrade1Cost * 1.5);
            updateDisplay();
            savePlayerData();
            // –¢—É—Ç –º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –∑–≤—É–∫ –¥–ª—è –∞–ø–≥—Ä–µ–π–¥—É
        }
    });

    upgrade2Button.addEventListener('click', () => {
        if (score >= upgrade2Cost) {
            score -= upgrade2Cost;
            autoClickPower += 1;
            upgrade2Cost = Math.floor(upgrade2Cost * 2);
            startAutoClicker();
            updateDisplay();
            savePlayerData();
            // –¢—É—Ç –º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –∑–≤—É–∫ –¥–ª—è –∞–ø–≥—Ä–µ–π–¥—É
        }
    });

    setInterval(savePlayerData, 5000); // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∫–æ–∂–Ω—ñ 5 —Å–µ–∫—É–Ω–¥
});
